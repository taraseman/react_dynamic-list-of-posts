{"version":3,"sources":["helpers.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["baseUrl","PostsList","posts","setComments","setchoosenPost","useState","choosenPostId","setChoosenId","className","map","post","key","id","userId","title","type","onClick","a","fetch","then","resolve","json","result","data","comments","choosenPost","filter","comment","postId","NewCommentForm","name","setName","email","setEmail","body","setBody","sendForm","bodyData","newMessage","method","headers","JSON","stringify","onSubmit","event","preventDefault","required","placeholder","value","onChange","target","PostDetails","commentsUpdate","isCommentShow","setCommentShow","createdAt","slice","isShown","length","commentss","defaultProps","App","postsFromServer","setAllPosts","setPosts","chosenId","setNewId","useEffect","postsAll","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f28c5b.chunk.js","sourcesContent":["const baseUrl = 'https://mate-api.herokuapp.com';\n\nexport const getPosts = () => (\n  fetch(`${baseUrl}/posts`)\n    .then(resolve => resolve.json()).then(result => result.data));\n\nexport const getPostsById = id => (\n  fetch(`${baseUrl}/posts/${id}`)\n    .then(resolve => resolve.json()).then(result => result.data));\n\nexport const getComents = () => (\n  fetch(`${baseUrl}/comments`)\n    .then(resolve => resolve.json())\n    .then(result => result.data));\n\nexport const deleteComment = (id) => {\n  fetch(`${baseUrl}/comments/${id}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const writeComment = (bodyData) => {\n  fetch(`${baseUrl}/comments`, {\n    method: 'POST',\n    headers: {\n      'Context-type': 'application/json;charset=UTF-8',\n    },\n    body: JSON.stringify(bodyData),\n  });\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getComents, getPostsById } from '../../helpers';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, setComments, setchoosenPost }) => {\n  const [choosenPostId, setChoosenId] = useState('');\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {(choosenPostId !== post.id) ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={\n                  async() => {\n                    let comments = await getComents(post.id);\n                    const choosenPost = await getPostsById(post.id);\n\n                    comments = comments\n                      .filter(comment => comment.postId === post.id);\n                    setComments(comments);\n\n                    setchoosenPost(choosenPost);\n                    setChoosenId(post.id);\n                  }\n              }\n              >\n                Open\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={\n                  () => {\n                    setchoosenPost(null);\n                    setChoosenId('');\n                  }\n                }\n              >\n                Close\n              </button>\n            )\n          }\n\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  setComments: PropTypes.func.isRequired,\n  setchoosenPost: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { writeComment } from '../../helpers';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const sendForm = () => {\n    const newMessage = {\n      postId,\n      name,\n      email,\n      body,\n    };\n\n    setName('');\n    setEmail('');\n    setBody('');\n    writeComment(newMessage);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={\n        (event) => {\n          event.preventDefault();\n          sendForm();\n        }\n      }\n    >\n      <div className=\"form-field\">\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          required\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          required\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => {\n            setBody(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { deleteComment } from '../../helpers';\nimport './PostDetails.scss';\n\nexport function PostDetails({ post, comments, commentsUpdate }) {\n  const [isCommentShow, setCommentShow] = useState(false);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <h3>{post.title}</h3>\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n        <p>{post.createdAt.slice(0, 10)}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setCommentShow(isShown => !isShown);\n          }}\n        >\n          {`${!isCommentShow ? 'Show' : 'Hide'} ${comments.length} comments`}\n        </button>\n        {isCommentShow && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id);\n                    commentsUpdate(commentss => commentss);\n                  }}\n                >\n                  X\n                </button>\n                <p>\n                  {comment.body}\n                  <br />\n                  {comment.createdAt.slice(0, 10)}\n                </p>\n\n              </li>\n            ))\n            }\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nPostDetails.propTypes = {\n  post: PropTypes.shape({\n    createdAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    body: PropTypes.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ),\n  commentsUpdate: PropTypes.func.isRequired,\n};\n\nPostDetails.defaultProps = {\n  comments: [],\n};\n","import React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './helpers';\n\nconst App = () => {\n  const [postsFromServer, setAllPosts] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [chosenId, setNewId] = useState('0');\n  const [comments, setComments] = useState([]);\n  const [choosenPost, setchoosenPost] = useState(null);\n\n  useEffect(async() => {\n    const postsAll = await getPosts();\n\n    setAllPosts(postsAll);\n    setPosts(postsAll);\n    setAllPosts(postsAll);\n  }, []);\n\n  useEffect(() => {\n    if (+chosenId === 0) {\n      setPosts(postsFromServer);\n    } else {\n      setPosts(postsFromServer.filter(post => post.userId === +chosenId));\n    }\n  }, [chosenId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setNewId(event.target.value);\n            }\n            }\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setComments={setComments}\n            setchoosenPost={setchoosenPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {choosenPost && (\n          <PostDetails\n            post={choosenPost}\n            comments={comments}\n            commentsUpdate={setComments}\n          />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}